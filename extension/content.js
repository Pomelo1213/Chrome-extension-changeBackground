!function(e){var o={};function t(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=o,t.d=function(e,o,r){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)t.d(r,n,function(o){return e[o]}.bind(null,n));return r},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=6)}({6:function(e,o){chrome.runtime.onMessage.addListener(function(e,o,t){var r,n;console.log("--request--\x3e",e);var c=e.type,a=e.tabId;switch(c){case"Color":chrome.storage.local.set(((r={})[a]={type:"Color",src:e.src},r)),chrome.storage.local.set({tabId:a}),document.body.style.background=e.src;break;case"Img":chrome.storage.local.set(((n={})[a]={type:"Img",src:e.src},n)),chrome.storage.local.set({tabId:a}),chrome.storage.local.get("background",function(e){document.body.style.backgroundSize=e.background}),document.body.style.background="url("+e.src+")";break;case"Select":console.log("this is is request--\x3e",e),chrome.storage.local.set({tabId:a}),chrome.storage.local.set({background:e.src}),document.body.style.backgroundSize=e.src;break;case"getCurrentTabId":chrome.storage.local.set({tabId:a})}}),window.onload=function(){var e;chrome.storage.local.get("tabId",function(o){o.hasOwnProperty("tabId")&&(e=o.tabId)}),chrome.storage.local.get(e,function(o){if(o.hasOwnProperty(e)){console.log("data---\x3e",o);var t=o[e];console.log("message---\x3e",t),"Color"===t.type?document.body.style.background=t.src:"Img"===t.type&&(document.body.style.background="url("+t.src+")")}}),chrome.storage.local.get("background",function(e){console.log("this is selec--\x3e>",e.background),document.body.style.backgroundSize=e.background})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,